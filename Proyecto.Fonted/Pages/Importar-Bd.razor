@page "/importar-bd"
@inject HttpClient Http
@inject IJSRuntime JS

<style>
    /* Color Palette Variables (Red Theme) */
    :root {
        --primary-red: #8B0000; /* Dark Red */
        --accent-red: #a52a2a; /* Lighter Red for hover/active */
        --text-light: #f8f9fa;
        --text-dark: #343a40;
        --background-light: #f5f5f5;
        --background-dark: #e9ecef; /* Used for secondary-color equivalent */
        --danger-color: #E74C3C; /* Strong red for danger actions */
        --success-color: #28a745;
        --info-color: #17a2b8;
        --warning-color: #ffc107;
        /* Redefining variables based on the red theme */
        --primary-color: var(--primary-red);
        --secondary-color: var(--background-dark); /* Using a light gray for general backgrounds */
        --primary-dark-color: var(--accent-red); /* Using accent-red for a slightly darker primary */
    }

    /* General Body Styles */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: var(--secondary-color);
        color: var(--text-dark);
    }

    /* Importar Contenedor (Specific for this page) */
    .importar-contenedor {
        background-color: var(--text-light); /* White background for the card */
        padding: 2rem;
        margin: 2rem auto;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
        max-width: 800px; /* Adjust as needed */
    }

    h2 {
        color: var(--primary-color);
        text-align: center;
        margin-bottom: 1.5rem;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: 600;
        color: var(--text-dark);
    }

    .form-control {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        font-size: 1rem;
        line-height: 1.5;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(139, 0, 0, 0.25); /* Shadow using primary-red with transparency */
            outline: none;
        }

    .btn {
        display: inline-block;
        font-weight: 600;
        color: var(--text-light);
        text-align: center;
        vertical-align: middle;
        user-select: none;
        background-color: var(--primary-color);
        border: 1px solid var(--primary-color);
        padding: 0.75rem 1.25rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
        transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        cursor: pointer;
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

        .btn-primary:hover:not(:disabled) {
            background-color: var(--primary-dark-color);
            border-color: var(--primary-dark-color);
        }

    .btn:disabled {
        opacity: 0.65;
        cursor: not-allowed;
    }

    .alert {
        padding: 1rem;
        margin-top: 1rem;
        border: 1px solid transparent;
        border-radius: 0.25rem;
    }

    .alert-info {
        color: #0c5460;
        background-color: #d1ecf1;
        border-color: #bee5eb;
    }
</style>

<h2>Importar Datos a la Base de Datos</h2>


<div class="card importar-contenedor">
    <div class="form-group">
        <label for="tablaSeleccionada">Seleccionar tabla de destino:</label>
        <select @bind="tablaSeleccionada" class="form-control" id="tablaSeleccionada">
            <option value="">-- Seleccione una tabla --</option>
            <option value="Usuarios">Usuarios</option>
            <option value="EvaluacionesDocentes">Evaluaciones Docentes</option>
            <option value="Capacitaciones">Capacitaciones</option>
            <option value="Obras">Obras</option>
            <option value="Investigaciones">Investigaciones</option>
            <option value="Facultades">Facultades</option>
            <option value="Carreras">Carreras</option>
            <option value="RequisitosAscenso">Requisitos de Ascenso</option>
            <option value="RolesDocente">Roles de Docente</option>
        </select>
    </div>

    <div class="form-group">
        <label for="archivo">Seleccionar archivo (.xlsx o .csv):</label>
        <InputFile OnChange="CargarArchivo" />
    </div>

    <button class="btn btn-primary" @onclick="ImportarDatos" disabled="@(!puedeImportar)">Importar</button>

    @if (!string.IsNullOrWhiteSpace(mensaje))
    {
        <div class="alert alert-info mt-3">@mensaje</div>
    }
</div>

@code {
    private string tablaSeleccionada = string.Empty;
    private IBrowserFile? archivoSeleccionado;
    private string mensaje = "";
    private bool puedeImportar => archivoSeleccionado != null && !string.IsNullOrEmpty(tablaSeleccionada);

    private void CargarArchivo(InputFileChangeEventArgs e)
    {
        archivoSeleccionado = e.File;
        mensaje = "";
    }

    private async Task ImportarDatos()
    {
        if (archivoSeleccionado == null || string.IsNullOrEmpty(tablaSeleccionada))
        {
            mensaje = "Debe seleccionar una tabla y un archivo.";
            return;
        }

        var contenido = new MultipartFormDataContent();
        var archivoContent = new StreamContent(archivoSeleccionado.OpenReadStream(maxAllowedSize: 10 * 1024 * 1024));
        archivoContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(archivoSeleccionado.ContentType);

        contenido.Add(archivoContent, "archivo", archivoSeleccionado.Name);
        contenido.Add(new StringContent(tablaSeleccionada), "tabla");

        try
        {
            var respuesta = await Http.PostAsync("https://tu-api.com/api/importar", contenido);

            if (respuesta.IsSuccessStatusCode)
            {
                mensaje = "✅ Importación realizada con éxito.";
            }
            else
            {
                mensaje = $"❌ Error al importar: {respuesta.ReasonPhrase}";
            }
        }
        catch (Exception ex)
        {
            mensaje = $"❌ Excepción: {ex.Message}";
        }
    }
}
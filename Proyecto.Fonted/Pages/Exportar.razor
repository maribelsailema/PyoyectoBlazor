@page "/exportar"
@using Proyecto.Fonted.Services
@using Proyecto.Frontend.Services
@using Proyecto.Shared
@using Proyecto.Shared.Models
@inject IJSRuntime JS
@inject InvestigacionService investigacionService
@inject CarreraService carreraService
@inject CapacitacionesService capacitacionesService
@inject ObraService obraService

<style>
    /* Estilos específicos para la página de exportación */
    .export-container {
        max-width: 1200px;
        margin: var(--spacing-xl) auto;
        padding: 0 var(--spacing-md);
    }

    .export-title {
        color: var(--primary-color);
        margin-bottom: var(--spacing-lg);
        font-size: 1.8rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: var(--spacing-sm);
    }

    .export-card {
        background-color: var(--card-bg-color);
        border-radius: var(--border-radius-lg);
        box-shadow: var(--shadow-md);
        padding: var(--spacing-xl);
        margin-bottom: var(--spacing-lg);
    }

    .export-filters {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: var(--spacing-lg);
        margin-bottom: var(--spacing-lg);
    }

    .filter-label {
        font-weight: 500;
        margin-bottom: var(--spacing-xs);
    }

    .btn {
        padding: var(--spacing-sm) var(--spacing-md);
        border-radius: var(--border-radius-md);
        cursor: pointer;
        font-size: 1rem;
        font-weight: 600;
        transition: var(--transition-normal);
        display: inline-flex;
        align-items: center;
        gap: var(--spacing-xs);
    }

    .btn-primary {
        background-color: var(--secondary-color);
        color: white;
    }

    .btn-primary:hover {
        background-color: darken(var(--secondary-color), 8%);
        transform: translateY(-2px);
    }
</style>

<div class="export-container">
    <h3 class="export-title"><i class="bi bi-download"></i> Exportar Datos</h3>

    <div class="export-card">
        <div class="export-filters">
            <div class="filter-group">
                <label class="filter-label">Tabla a Importar</label>
                <select class="form-select" @bind="tablaSeleccionada">
                    <option value="">Seleccione una tabla</option>
                    <option value="Investigaciones">Investigaciones</option>
                    <option value="Capacitaciones">Capacitaciones</option>
                    <option value="Obras">Obras</option>
                </select>
            </div>

            <div class="export-button">
                <button class="btn btn-primary" @onclick="ImportarDatos">
                    <i class="bi bi-download"></i> Importar
                </button>
            </div>
        </div>
    </div>

    @if (mostrarInvestigaciones)
    {
        <h4>Investigaciones</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Título</th>
                    <th>Tiempo</th>
                    <th>Inicio</th>
                    <th>Fin</th>
                    <th>Carrera</th>
                    <th>PDF</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var inv in listaInvestigaciones)
                {
                    <tr>
                        <td>@inv.NombreProyecto</td>
                        <td>@inv.TiempoMeses</td>
                        <td>@inv.FechaInicio.ToShortDateString()</td>
                        <td>@inv.FechaFin?.ToShortDateString()</td>
                        <td>@inv.NombreCarrera</td>
                        <td>
                            @if (inv.Pdf is not null && inv.Pdf.Length > 0)
                            {
                                <a href="#" @onclick="() => AbrirPdf(inv.Pdf)">Ver PDF</a>
                            }
                            else
                            {
                                <span class="text-muted">Sin PDF</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (mostrarCapacitaciones)
    {
        <h4>Capacitaciones</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Curso</th>
                    <th>Horas</th>
                    <th>Fecha Inicio</th>
                    <th>PDF</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var cap in listaCapacitaciones)
                {
                    <tr>
                        <td>@cap.NombreCurso</td>
                        <td>@cap.DuracionHoras</td>
                        <td>@cap.FechaInicio.ToShortDateString()</td>
                        <td>
                            @if (cap.Pdf is not null && cap.Pdf.Length > 0)
                            {
                                <a href="#" @onclick="() => AbrirPdf(cap.Pdf)">Ver PDF</a>
                            }
                            else
                            {
                                <span class="text-muted">Sin PDF</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    @if (mostrarObras)
    {
        <h4>Obras</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Título</th>
                    <th>Tiempo</th>
                    <th>Inicio</th>
                    <th>Fin</th>
                    <th>Carrera</th>
                    <th>PDF</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var obra in listaObras)
                {
                    <tr>
                        <td>@obra.NombreObra</td>
                        <td>@obra.TiempoMeses</td>
                        <td>@obra.FechaInicio.ToShortDateString()</td>
                        <td>@obra.FechaFin?.ToShortDateString()</td>
                        <td>@obra.NombreCarrera</td>
                        <td>
                            @if (obra.Pdf is not null && obra.Pdf.Length > 0)
                            {
                                <a href="#" @onclick="() => AbrirPdf(obra.Pdf)">Ver PDF</a>
                            }
                            else
                            {
                                <span class="text-muted">Sin PDF</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private string tablaSeleccionada = string.Empty;
    private string? cedulaUsuario;

    private bool mostrarInvestigaciones;
    private bool mostrarCapacitaciones;
    private bool mostrarObras;

    private List<Investigacion> listaInvestigaciones = new();
    private List<Capacitacione> listaCapacitaciones = new();
    private List<Obra> listaObras = new();

    protected override async Task OnInitializedAsync()
    {
        cedulaUsuario = await JS.InvokeAsync<string>("localStorage.getItem", "cedulaUsuario");
    }

    private async Task ImportarDatos()
    {
        mostrarInvestigaciones = mostrarCapacitaciones = mostrarObras = false;

        if (string.IsNullOrWhiteSpace(tablaSeleccionada) || string.IsNullOrWhiteSpace(cedulaUsuario))
            return;

        switch (tablaSeleccionada)
        {
            case "Investigaciones":
                listaInvestigaciones = await investigacionService.ObtenerPorCedulaAsync(cedulaUsuario);
                mostrarInvestigaciones = true;
                break;
            case "Capacitaciones":
                listaCapacitaciones = await capacitacionesService.ObtenerPorCedulaAsync(cedulaUsuario);
                mostrarCapacitaciones = true;
                break;
            case "Obras":
                listaObras = await obraService.ObtenerPorCedulaAsync(cedulaUsuario);
                mostrarObras = true;
                break;
        }
    }

    private async Task AbrirPdf(byte[]? pdf)
    {
        if (pdf is null || pdf.Length == 0) return;
        var base64 = Convert.ToBase64String(pdf);
        await JS.InvokeVoidAsync("openPdf", base64);
    }
}

@page "/estado-promocion"
@inject NavigationManager Navigation

<h3>Estado de Mi Postulación a Promoción</h3>

<AlertMessage Message="@statusMessage" AlertType="@alertType" />

@if (applicationStatus != null)
{
    <div class="card mb-4 shadow-sm">
        <div class="card-header bg-primary text-white">
            Detalles de la Postulación
        </div>
        <div class="card-body">
            <p><strong>Nivel Postulado:</strong> @applicationStatus.NivelPostulado</p>
            <p><strong>Fecha de Postulación:</strong> @applicationStatus.FechaPostulacion.ToShortDateString()</p>
            <p>
                <strong>Estado Actual:</strong>
                <span class="badge bg-@(GetStatusBadgeClass(applicationStatus.Estado))">@applicationStatus.Estado</span>
            </p>
            @if (!string.IsNullOrEmpty(applicationStatus.Observaciones))
            {
                <p><strong>Observaciones:</strong> @applicationStatus.Observaciones</p>
            }
            @if (applicationStatus.FechaAprobacion.HasValue)
            {
                <p><strong>Fecha de Aprobación/Rechazo:</strong> @applicationStatus.FechaAprobacion.Value.ToShortDateString()</p>
            }
        </div>
    </div>

    <h4>Documentos Requeridos y Subidos</h4>
    <ul class="list-group mb-4">
        @foreach (var doc in applicationStatus.DocumentosRequeridos)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                @doc.NombreDocumento
                @if (doc.EstaEnviado)
                {
                    <span class="badge bg-success">Enviado <i class="bi bi-check-circle-fill ms-1"></i></span>
                }
                else
                {
                    <span class="badge bg-warning">Pendiente <i class="bi bi-exclamation-circle-fill ms-1"></i></span>
                }
            </li>
        }
    </ul>

    @if (applicationStatus.Estado == "Rechazado")
    {
        <div class="alert alert-danger" role="alert">
            Su postulación ha sido rechazada. Por favor, revise las observaciones y sus documentos.
            <button class="btn btn-sm btn-danger ms-2" @onclick="GoToPerfil">Revisar Documentos</button>
        </div>
    }
    else if (applicationStatus.Estado == "Aprobado")
    {
        <div class="alert alert-success" role="alert">
            ¡Felicidades! Su postulación ha sido aprobada.
        </div>
    }
}
else
{
    <p>No se encontró ninguna postulación activa. ¡Empiece el proceso de promoción!</p>
    <button class="btn btn-primary" @onclick="GoToPromocion">Ir a Proceso de Promoción</button>
}

@code {
    private string statusMessage = string.Empty;
    private string alertType = "info";
    private ApplicationStatusModel applicationStatus;

    protected override void OnInitialized()
    {
        // SIMULACIÓN DE DATOS PARA EL FRONTEND
        applicationStatus = new ApplicationStatusModel
        {
            NivelPostulado = "Docente Asociado 2",
            FechaPostulacion = DateTime.Now.AddDays(-10),
            Estado = "Revisión", // O "Aprobado", "Rechazado" para probar la UI
            Observaciones = "Pendiente de verificación de publicaciones.",
            FechaAprobacion = null,
            DocumentosRequeridos = new List<RequiredDocumentStatus>
            {
                new RequiredDocumentStatus { NombreDocumento = "Título de PhD", EstaEnviado = true },
                new RequiredDocumentStatus { NombreDocumento = "Certificado de Publicaciones", EstaEnviado = false },
                new RequiredDocumentStatus { NombreDocumento = "Currículum Vitae", EstaEnviado = true }
            }
        };
        // Si quieres simular que no hay postulación activa:
        // applicationStatus = null;
    }

    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Revisión" => "warning",
            "Aprobado" => "success",
            "Rechazado" => "danger",
            _ => "secondary"
        };
    }

    private void GoToPromocion()
    {
        Navigation.NavigateTo("/promocion");
    }

    private void GoToPerfil()
    {
        Navigation.NavigateTo("/perfil");
    }

    // Modelos de datos para el frontend
    public class ApplicationStatusModel
    {
        public string NivelPostulado { get; set; } = string.Empty;
        public DateTime FechaPostulacion { get; set; }
        public string Estado { get; set; } = string.Empty;
        public string Observaciones { get; set; } = string.Empty;
        public DateTime? FechaAprobacion { get; set; }
        public List<RequiredDocumentStatus> DocumentosRequeridos { get; set; } = new();
    }

    public class RequiredDocumentStatus
    {
        public string NombreDocumento { get; set; } = string.Empty;
        public bool EstaEnviado { get; set; }
    }
}